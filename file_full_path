// 修改后的加入房间函数
async function joinRoom() {
    const roomId = document.getElementById('roomId').value.trim();
    const password = document.getElementById('joinPassword').value;
    const username = document.getElementById('usernameJoin').value.trim() || '匿名用户';

    try {
        await initWebSocket(); // 等待连接建立

        ws.send(JSON.stringify({
            type: 'join_room',
            room_id: roomId,
            password: password,
            username: username
        }));

        // 不再直接设置当前房间ID和请求用户列表
        // currentRoom = roomId;
        // document.getElementById('currentRoom').textContent = currentRoom;
        // ws.send(JSON.stringify({
        //     type: 'get_users',
        //     room_id: roomId
        // }));

    } catch (error) {
        Swal.fire('错误', '连接服务器失败，请重试', 'error');
    }
}
// 处理系统消息
function handleSystemMessage(content) {
    if (content.startsWith('房间创建成功')) {
        currentRoom = content.split('ID: ')[1];
        document.getElementById('currentRoom').textContent = currentRoom;
        appendSystemMessage(`您已创建房间 ${currentRoom}`);
    } else if (content.startsWith('成功加入房间')) {
        currentRoom = content.split(' ')[2]; // 假设消息格式为 "成功加入房间 <room_id>"
        document.getElementById('currentRoom').textContent = currentRoom;
        document.getElementById('roomPanel').classList.add('hidden');
        document.getElementById('chatPanel').classList.remove('hidden');
        ws.send(JSON.stringify({
            type: 'get_users',
            room_id: currentRoom
        }));
    }
    appendSystemMessage(content);
}